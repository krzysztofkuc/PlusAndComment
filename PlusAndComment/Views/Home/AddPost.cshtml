@using PlusAndComment.Common
@model PlusAndComment.Models.AddPostVM

<!DOCTYPE html>

<head>
    <meta name="viewport" content="width=device-width" />
    <title>Dodaj wiadomość</title>

    <style>
        img {
            max-height: 500px;
            max-width: 500px;
            height: auto;
            width: auto;
        }

        .contentLink {
            width: 100%;
        }

         .contentText {
            width: 100%;
        }

        #ContentDescription {
            width: 900px;
        }

        #AddNewPost {
            width: 500px !important;
            border: 1px;
            border-style: solid;
            border-color: lightgrey;
        }

        #loadingPageThumb {
            width: 40px;
            height: 40px;
        }

        .center {
            float: none;
            margin-left: auto;
            margin-right: auto;
        }

        .normalBtn:hover {
            background-color: aliceblue;
            cursor: pointer;
        }

        input[type="file"] {
            display: none;
        }
        .custom-file-upload {
            display: inline-block;
            padding: 6px 12px;
            cursor: pointer;
        }
        .nav-tabs > li > a {
            background-color: #5A707C !important;
        }
        .tab-content{
            background-color: #5A707C !important;
        }

        ::-webkit-input-placeholder { /* WebKit, Blink, Edge */
            color: #2D383E;
        }

        .nav-tabs > li > a {
            border: none;
            color: #D4D4D4;
        }

         .nav-tabs > li > a:hover {
            border: none;
            color: white;
        }

        .nav-tabs > li.active > a, .nav-tabs > li.active > a:hover, .nav-tabs > li.active > a:focus {
            color: white;
        }
    </style>
</head>
    @using (Html.BeginForm("AddPost","Home", FormMethod.Post, new { id = "addPostForm" }))
    {
        @Html.HiddenFor(m => m.Header, new {id = "imageSourceHeader"})
        @Html.HiddenFor(m => m.FilePath, new { id = "filePath" })
        @Html.HiddenFor(m => m.Type, new { id = "postType" })
        @Html.HiddenFor(m => m.EmbedUrl, new { id = "embedUrl" })
        @Html.HiddenFor(m => m.ReferenceUrl, new { id = "referenceUrl" })

        @Html.AntiForgeryToken()

        <div class="container">
            <h4>Dodaj Post</h4>
            <hr />
            @Html.ValidationSummary(true)
            <div style="text-align: center;">
                <div id="AddNewPost" class="center" style="padding: 20px 20px 20px 20px;">
                    <div style="float: left;">
                        <label id="LoadLinkBtn" class="normalBtn btn" style="display: inline-block"><span class="glyphicon glyphicon-link" aria-hidden="true"></span>&nbsp;Link</label>
                        &nbsp;<label for="imageUploadForm" class="custom-file-upload normalBtn btn">
                            <i class="glyphicon glyphicon-picture"></i>&nbsp;Zdjęcie
                        </label>
                        <input type="file" id="imageUploadForm" class="custom-file-upload " />
                        &nbsp;<label id="WriteTextBtn" class="normalBtn btn" style="display: inline-block"><span class="glyphicon glyphicon-font" aria-hidden="true"></span>&nbsp;Tekst</label>
                    </div>
                    <hr style="margin-top: 50px; margin-bottom: 0">
                    <div>
                        @Html.TextAreaFor(model => model.Url, new { @class = "input contentLink", style = "max-width: 498px !important; border-style: none; padding-left: 15px; margin-top: 15px; display: none", placeholder = "Wklej link" })
                        @Html.ValidationMessageFor(model => model.Url)
                    </div>
                    <div>
                        @Html.TextAreaFor(model => model.Content, new { @class = "input contentText", @rows = 6, style = "max-width: 498px !important; border-style: none; padding-left: 15px; margin-top: 15px; display: none", placeholder = "Wpisz tekst" })
                        @Html.ValidationMessageFor(model => model.Content)
                    </div>
                    <div>
                        <hr style="margin: 0 0 0 0">
                        @Html.TextAreaFor(model => model.ShortDescription, new { @class = "input", id = "ContentDescription", style = "max-width: 100%; border-style: none; padding-left: 15px; margin-top: 15px; display: none", placeholder = "Dodaj opis" })
                        <hr style="margin: 0 0 0 0">
                    </div>
                    <div id="AddNewPostContent" style="display: none">
                        <img id="loadingPageThumb" src="~/Storage/ajax-loader.gif" style="display: none; max-width: 20px; max-height: 20px; margin-top: 20px;" />
                        <div id="imageShortDesc" style="display: inline-grid"></div>
                        @{
                            if (!string.IsNullOrWhiteSpace(Model.Url) && 
                                        (Model.Url.Contains("youtube") || 
                                Model.Url.Contains("www.facebook.com") || 
                                  Model.Url.Contains("dailymotion.com")))
                            {
                                <iframe id="movieThumb" width="470" height="365" src="@Model.Url" frameborder="0" allowfullscreen style="max-width: 100%;"></iframe>
                            }
                            else if (!string.IsNullOrWhiteSpace(Model.Url) && Model.Url.ToLower().EndsWith(".gif"))
                            {
                                <img src="@Model.Url" />
                                <div style="text-align: left; color:#B0B0B0; font-size: 11px">
                                    źródło:@Html.DisplayFor(m => m.Header)
                                </div>
                            }
                            else if (!string.IsNullOrWhiteSpace(Model.Url) && 
                                     (Model.Url.ToLower().EndsWith(".jpg") ||
                                     Model.Url.ToLower().EndsWith(".jpeg") || 
                                     Model.Url.ToLower().EndsWith(".png")))
                            {
                                <img src="@Model.Url" data-wait="true" />
                                <div style="text-align: left; color:#B0B0B0; font-size: 11px">
                                    źródło:@Html.DisplayFor(m => m.Header)
                                </div>
                            }
                        }
                        <div>
                            <img id="imageThumb" src="" style="width: 100% !important"/>
                            <iframe id="movieThumb" width="420" height="315" src="" frameborder="0" allowfullscreen style="display: none"></iframe>
                        </div>
                        <div id="imageTitle" style="display: inline-block"></div>
                    </div>
                    <div class="pull-right">
                        <img id="loadingAddPostButton" src="~/Storage/ajax-loader.gif" style="display: none; padding-right: 30px" />
                        <input id="addPostButton" type="submit" value="Dodaj" class="btn btn-default" style="margin: 10px 10px 10px 10px" />
                    </div>
                    <div class="text-left" style="color: #b73434; max-width: 30px; padding-left: 20px">
                        <div class="checkbox">
                            @Html.CheckBoxFor(m => m.NeedAge)
                            @Html.DisplayNameFor(m => m.NeedAge)
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Wróć do strony głównej", "Index")
    </div>

<script>
    $(function () {
        $("#addPostForm").submit(function (event) {
            $("#addPostButton").hide();
            $("#loadingAddPostButton").show();
        });
    });

    $('.contentLink').on('paste', function (event) {
        var self = $(this);

        setTimeout(function () { target(self) }, 100);
        
    });

    function target(elem)
    {
        contentLinkChanged(elem.val())
    }

    $('#imageUploadForm').click(function () {
            $(".contentText").val("");
            $(".contentLink").val("");
            $(".contentLink").hide();
            $(".contentText").hide();
            $("#ContentDescription").hide();
        });

        $('#LoadLinkBtn').click(function () {
            $(".contentText").hide();
            $(".contentText").val("");
            $(".contentLink").show();
            $("#ContentDescription").show();
        });

        $('#WriteTextBtn').click(function () {
            $(".contentLink").hide();
            $("#ContentDescription").hide();
            $(".contentLink").val("");
            $(".contentText").show();
            $('#addPostButton').attr("disabled", false);
        });

        function contentLinkChanged(value) {
            $.ajax({
                url: 'FindWebSite',
                dataType: 'json',
                data: { selectedValue: value },
                beforeSend: function () {
                    $("#loadingPageThumb").show();
                    $("#AddNewPostContent").show();
                    $("#imageThumb").hide();
                    $("#addPostButton").attr("disabled", true);
                },
                complete: function (){$("#loadingPageThumb").hide();},
                success: function (post) {
                    $("#addPostButton").attr("disabled", false);
                    if (post.Type == 2) {
                        $("#postType").val("mov");
                        $("#embedUrl").val(post.EmbedUrl);
                        $("#movieThumb").attr("src", post.EmbedUrl);
                        $("#referenceUrl").val(post.ReferenceUrl);
                        $("#imageThumb").hide();
                        $("#movieThumb").show();
                    }else if (post.Type == 1) {
                        $("#postType").val("gif");
                        $("#embedUrl").val(post.EmbedUrl);
                        $("#referenceUrl").val(post.ReferenceUrl);
                        $("#imageThumb").attr("src", post.EmbedUrl);
                        $("#imageThumb").show();
                        $("#movieThumb").hide();
                    }else if (post.Type == 0) {
                        $("#postType").val("img");
                        $("#filePath").val(post.FilePath);
                        $("#imageThumb").attr("src", post.Url);
                        $("#referenceUrl").val(post.ReferenceUrl);
                        $("#imageThumb").show();
                        $("#movieThumb").hide();
                    }

                    var header = "<h style='font-weight: bold'>" + post.Header + "</h>";
                    if (!(header.indexOf("null") !== -1))
                    {
                        $("#imageTitle").html(header).text();
                    }

                    $("#imageSourceHeader").val(post.Header).text();
                    $('#addPostButton').attr("disabled", false);
                },
                failure: function (error) {
                }
            });
        }

        $(document).ready(function () {
        $("#imageUploadForm").change(function () {
            var formData = new FormData();
            var totalFiles = document.getElementById("imageUploadForm").files.length;
            for (var i = 0; i < totalFiles; i++)
            {
                var file = document.getElementById("imageUploadForm").files[i];
                formData.append("imageUploadForm", file);
            }
            $.ajax({
                type: "POST",
                url: '/Home/Upload',
                data: formData,
                dataType: 'json',
                contentType: false,
                processData: false,
                success: function (post) {
                    var type = post[0].Value;
                    var gifUrl = post[1].Value;
                    var imgUrl = post[2].Value;
                    var referenceUrl = post[3].Value;
                    $("#postType").val(type);

                    if (type == "gif") {
                        $("#imageThumb").attr("src", gifUrl);
                    }
                    else {$("#imageThumb").attr("src", referenceUrl);}

                    $('#filePath').val(gifUrl);
                    $("#embedUrl").val(gifUrl);
                    $("#referenceUrl").val(referenceUrl);
                    $("#AddNewPostContent").show();
                    $('#addPostButton').attr("disabled", false);
                },
                error: function (error) {
                    alert("errror");
                }
            });
        });
    });
</script>
