@using PlusAndComment.Common
@model PlusAndComment.Models.AddPostVM

<!DOCTYPE html>

<head>
    <meta name="viewport" content="width=device-width" />
    <title>Dodaj wiadomość</title>
</head>
        @Html.AntiForgeryToken()

        <div class="container">
            <h4>Dodaj Post</h4>
            <hr />
            @Html.ValidationSummary(true)
            <div style="text-align: center;">
            @using (Html.BeginForm("AddPost", "Home", FormMethod.Post, new { @id = "AddPost" }))
            {
                @Html.HiddenFor(m => m.Header, new { id = "imageSourceHeader" })
                @Html.HiddenFor(m => m.FilePath, new { id = "filePath" })
                @Html.HiddenFor(m => m.Type, new { id = "postType" })
                @Html.HiddenFor(m => m.EmbedUrl, new { id = "embedUrl" })
                @Html.HiddenFor(m => m.ReferenceUrl, new { id = "referenceUrl" })
                @Html.HiddenFor(m => m.Tab, new { id = "tab" })

                <div id="AddNewPost" class="center" style="padding: 20px 20px 20px 20px;">

                    <!-- Zakładki -->
                    <ul class="nav nav-tabs" role="tablist">
                        <li class="active"><a href="#1zakladka" role="tab" data-toggle="tab"><span class="glyphicon glyphicon-link" aria-hidden="true"></span>&nbsp;Link</a></li>
                        <li><a href="#2zakladka" role="tab" data-toggle="tab"><i class="glyphicon glyphicon-picture"></i>&nbsp;Zdjęcie</a></li>
                        <li><a href="#3zakladka" role="tab" data-toggle="tab"><span class="glyphicon glyphicon-font" aria-hidden="true"></span>&nbsp;Tekst </a></li>
                        <li><a href="#4zakladka" role="tab" data-toggle="tab"><span class="glyphicon glyphicon-fire" aria-hidden="true"></span>&nbsp;Suchar</a></li>
                        <li><a href="#5zakladka" role="tab" data-toggle="tab"><span class="glyphicon glyphicon-align-left" aria-hidden="true"></span>&nbsp;Artykuł</a></li>
                    </ul>

                    <!-- Zawartość zakładek -->
                    <div class="tab-content">
                        <div class="tab-pane" id="1zakladka">
                            <div style="padding: 10px 10px 10px 10px">
                                <div>
                                    @Html.TextAreaFor(model => model.Url, new { @class = "input contentLink", style = "max-width: 498px !important; border-style: none; padding-left: 15px; margin-top: 15px;", placeholder = "Wklej link" })
                                    @Html.ValidationMessageFor(model => model.Url)
                                </div>
                                <hr style="margin-top: 1px; margin-bottom: 1px">
                                <div>
                                    @Html.TextAreaFor(model => model.ShortDescription, new { @class = "input ContentDescription", id="xxx2", placeholder = "Dodaj opis" })
                                    @Html.TextAreaFor(model => model.Content, new { @class = "input ContentDescription", id = "xxx2", placeholder = "Dodaj opis" })
                                    <textarea>aaaa</textarea>
                                </div>
                                <hr style="margin: 0 0 0 0">
                                @{ Html.RenderPartial("~\\Views\\Home\\AddPost\\Partials\\_PostPreviewPartial.cshtml", Model, new ViewDataDictionary() { { "id", "AddLinkPreview" } }); }
                                <img id="loadingAddPostButton" src="~/Storage/ajax-loader.gif" style="display: none; padding-right: 30px" />
                                <div class="text-right">
                                    <div style="display: inline-block; color: #b73434; max-width: 30px;">
                                        <div class="checkbox">
                                            @Html.CheckBoxFor(m => m.NeedAge)
                                            @Html.DisplayNameFor(m => m.NeedAge)
                                        </div>
                                    </div>
                                    <input id="addPostButton" type="submit" value="Dodaj" class="btn btn-default" style="margin: 10px 10px 10px 10px" />
                                </div>
                            </div>
                        </div>
                        <div class="tab-pane" id="2zakladka">
                            <div style="padding: 10px 10px 10px 10px">
                                @Html.HiddenFor(m => m.ReferenceUrl, new { id = "referenceUrl" })
                                <div>
                                    @Html.TextAreaFor(model => model.ShortDescription, new { @class = "input ContentDescription", id = "xxx2", placeholder = "Dodaj opis" })
                                    <hr style="margin: 0 0 0 0">
                                </div>
                                <label for="userImageUploadForm" style="margin-top: 10px" class="custom-file-upload normalBtn btn btn-orange">
                                    <i class="glyphicon glyphicon-plus-sign"></i>&nbsp;<i class="glyphicon glyphicon-picture"></i>&nbsp;Zdjęcie / GIF
                                </label>
                                <input type="file" id="userImageUploadForm" class="custom-file-upload " />
                                @{ Html.RenderPartial("~\\Views\\Home\\AddPost\\Partials\\_PostPreviewPartial.cshtml", Model, new ViewDataDictionary() { { "id", "UserPhotoPreview" } });}
                                <div class="text-right">
                                    <input type="submit" value="Dodaj" class="btn btn-default" style="margin: 10px 10px 10px 10px" />
                                </div>
                             
                                <img id="loadingAddPostPhoto" src="~/Storage/ajax-loader.gif" style="display: none; padding-right: 30px" />
                            </div>
                        </div>
                        <div class="tab-pane" id="3zakladka">
                            <div style="padding: 10px 10px 10px 10px">
                                <div>
                                    @Html.TextAreaFor(model => model.Content, new { @class = "input contentText", @rows = 6, style = "max-width: 498px !important; border-style: none; padding-left: 15px; margin-top: 15px;", placeholder = "Wpisz tekst" })
                                    @Html.ValidationMessageFor(model => model.Content)
                                </div>
                                <hr style="margin: 0 0 0 0">
                                <div class="text-right">
                                    <input type="submit" value="Dodaj" class="btn btn-default" style="margin: 10px 10px 10px 10px" />
                                </div>
                            </div>
                        </div>
                        <div class="tab-pane" id="4zakladka">
                            <div style="padding: 10px 10px 10px 10px">
                                <div>
                                    @Html.TextAreaFor(model => model.suchar.Content, new { @class = "input contentText", @id = "contentSuchar", @rows = 6, style = "max-width: 498px !important; border-style: none; padding-left: 15px; margin-top: 15px;", placeholder = "Wpisz tekst" })
                                    @Html.ValidationMessageFor(model => model.suchar.Content)
                                </div>
                                <hr style="margin: 0 0 0 0">
                                <div class="text-right">
                                    <input id="addPostLinkButton" type="submit" value="Dodaj" class="btn btn-default" style="margin: 10px 10px 10px 10px" />
                                </div>
                            </div>
                        </div>
                        <div class="tab-pane" id="5zakladka">
                            <div style="padding: 10px 10px 10px 10px">
                                @Html.HiddenFor(m => m.Article.RelThumbPath, new { @id = "RelThumbPath" })

                                <div style="padding: 20px 20px 20px 20px">
                                    <div class="form-horizontal text-left">
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Article.Url, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Article.Url, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Article.Url, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Article.Header, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Article.Header, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Article.Header, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Article.ShortDesc, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.TextAreaFor(model => model.Article.ShortDesc, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Article.ShortDesc, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Article.LongDesc, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.TextAreaFor(model => model.Article.LongDesc, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Article.LongDesc, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            <div class="col-md-12">
                                                <label for="imageUploadFormArticle" class="custom-file-upload normalBtn btn pull-left">
                                                    <i class="glyphicon glyphicon-plus-sign"></i>&nbsp;<i class="glyphicon glyphicon-picture"></i>&nbsp;Zdjęcie
                                                </label>
                                                <input type="file" id="imageUploadFormArticle" class="custom-file-upload " />
                                                &nbsp;&nbsp;<label id="RelFilePath"></label>
                                                <img id="loadingAddPostArticlePhoto" src="~/Storage/ajax-loader.gif" style="display: none; padding-right: 30px" />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                
                                <hr style="margin: 0 0 0 0">
                                <div class="text-right">
                                    <input type="submit" value="Dodaj" class="btn btn-default" style="margin: 10px 10px 10px 10px" />
                                </div>
                            </div>
                            </div>
                    </div>
                    
                </div>
             }
            </div>
        </div>
    

    <div>
        @Html.ActionLink("Wróć do strony głównej", "Index")
    </div>

<script>


    thisWillFireImmediately();

    function thisWillFireImmediately()
    {
        var xxx = $('#xxx2').val();
    }

    $(document).ready(function () {
        $(".nav-tabs a[href='#@Model.Tab']").tab('show');

        if ('@Model.Tab' == null || '@Model.Tab' == 'undefined' || '@Model.Tab' == 'null' || '@Model.Tab' == '')
        {
            $(".nav-tabs a[href='#2zakladka']").tab('show');
            $(".nav-tabs a[href='#1zakladka']").tab('show');
        }
    });


    $('#AddPost').submit(function () {
        var at = $("div.active")[0].id;
        $("#tab").val(at);
    });

    $('.contentLink').on('paste', function (event) {
        var self = $(this);

        setTimeout(function () { target(self) }, 100);

    });

    function target(elem)
    {
        contentLinkChanged(elem.val())
    }

    function hideBottomBtnsAddPost()
    {
        $("#confirmButtonsAddPost").hide();
    }

    function showBottomBtnsAddPost() {
        $("#confirmButtonsAddPost").show();
    }

        function contentLinkChanged(value) {
            $.ajax({
                url: 'FindWebSite',
                dataType: 'json',
                data: { selectedValue: value },
                beforeSend: function () {
                    $("#loadingPageThumb").show();
                    $("#AddNewPostContent").show();
                    $(".imageThumb_AddLinkPreview").hide();
                    $("#addPostButton").attr("disabled", true);
                },
                complete: function (){$("#loadingPageThumb").hide();},
                success: function (post) {
                    $("#addPostButton").attr("disabled", false);
                    if (post.Type == 2) {
                        $("#postType").val("mov");
                        $("#embedUrl").val(post.EmbedUrl);
                        $("#movieThumb").attr("src", post.EmbedUrl);
                        $("#referenceUrl").val(post.ReferenceUrl);
                        $(".imageThumb_AddLinkPreview").hide();
                        $("#movieThumb_AddLinkPreview").show();
                    }else if (post.Type == 1) {
                        $("#postType").val("gif");
                        var newpath = "../../../../" + post.EmbedUrl;
                        var hhhg = "~/Storage/" + post.EmbedUrl;
                        $("#embedUrl").val('@Url.Content("~/Storage/")' + post.EmbedUrl);
                        $("#referenceUrl").val(post.ReferenceUrl);
                        $(".imageThumb_AddLinkPreview").attr("src", newpath);
                        $(".imageThumb_AddLinkPreview").show();
                        $("#movieThumb").hide();
                    }else if (post.Type == 0) {
                        $("#postType").val("img");
                        $("#filePath").val(post.FilePath);
                        $(".imageThumb_AddLinkPreview").attr("src", post.Url);
                        $("#referenceUrl").val(post.ReferenceUrl);
                        $(".imageThumb_AddLinkPreview").show();
                        $("#movieThumb_AddLinkPreview").hide();
                    }

                    var header = "<h style='font-weight: bold'>" + post.Header + "</h>";
                    if (!(header.indexOf("null") !== -1))
                    {
                        $("#imageTitle").html(header).text();
                    }

                    $("#imageSourceHeader").val(post.Header).text();
                    $('#addPostButton').attr("disabled", false);
                },
                failure: function (error) {
                }
            });
        }

        $(document).ready(function () {
        $("#imageUploadForm").change(function () {
            var formData = new FormData();
            var totalFiles = document.getElementById("imageUploadForm").files.length;
            for (var i = 0; i < totalFiles; i++)
            {
                var file = document.getElementById("imageUploadForm").files[i];
                formData.append("imageUploadForm", file);
            }
            $.ajax({
                type: "POST",
                url: '@Url.Action("Upload", "Home")',
                data: formData,
                dataType: 'json',
                contentType: false,
                processData: false,
                success: function (post) {
                    var type = post.Type;
                    var gifUrl = post.postUrl;
                    var imgUrl = post.ImageUrl;
                    var referenceUrl = post.ReferenceUrl;
                    $("#postType").val(type);

                    if (type == "gif") {
                        $("#imageThumb_AddLinkPreview").attr("src", gifUrl);
                    }
                    else { $("#imageThumb_AddLinkPreview").attr("src", referenceUrl); }

                    $('#filePath').val(gifUrl);
                    $("#embedUrl").val(gifUrl);
                    $("#referenceUrl").val(referenceUrl);
                    $("#AddNewPostContent").show();
                    $('#addPostButton').attr("disabled", false);
                },
                error: function (error) {
                    alert("errror");
                }
            });
        });
        });

        $(document).ready(function () {
            $("#userImageUploadForm").change(function () {
                var formData = new FormData();
                var totalFiles = document.getElementById("userImageUploadForm").files.length;
                for (var i = 0; i < totalFiles; i++) {
                    var file = document.getElementById("userImageUploadForm").files[i];
                    formData.append("userImageUploadForm", file);
                }
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("Upload", "Home")",
                    data: formData,
                    dataType: 'json',
                    contentType: false,
                    processData: false,
                    beforeSend: function ()
                    {
                        $("#UserPhotoPreview").hide();
                        $("#loadingAddPostPhoto").show();
                    },
                    success: function (post) {
                        var type = post[3].Value;
                        //var imgUrl = post.ImageUrl;
                        var filePath = post[1].Value;
                        var referenceUrl = post[2].Value;
                        var gifUrl = post[2].Value;
                        //$("#idPost").val(post.ID);
                        $("#postType").val(type);

                        if (type == "gif") {
                            gifUrl = gifUrl.substring(0, gifUrl.length - 3);
                            gifUrl += "gif";
                            $(".imageThumb_UserPhotoPreview").attr("src", gifUrl);
                        }
                        else { $(".imageThumb_UserPhotoPreview").attr("src", filePath); }

                        $('#filePath').val(filePath);
                        $("#embedUrl").val(gifUrl);
                        $("#referenceUrl").val(referenceUrl);
                        $("#AddNewPostContent").show();
                        $("#UserPhotoPreview").show();
                        $("#loadingAddPostPhoto").hide();
                        $('#addPostButton').attr("disabled", false);
                    },
                    error: function (error) {
                        alert("errror");
                    }
                });
            });
        });

    $(document).ready(function () {
        $("#imageUploadFormArticle").change(function () {
            var formData = new FormData();
            var totalFiles = document.getElementById("imageUploadFormArticle").files.length;
            for (var i = 0; i < totalFiles; i++) {
                var file = document.getElementById("imageUploadFormArticle").files[i];
                formData.append("imageUploadFormArticle", file);
            }
            $.ajax({
                type: "POST",
                url: '@Url.Action("Upload","Home")',
                data: formData,
                dataType: 'json',
                contentType: false,
                processData: false,
                beforeSend: function ()
                {
                    $('#loadingAddPostArticlePhoto').show();
                },
                success: function (post) {
                    var type = "img";
                    var imgUrl = post[1].Value;
                    var fileRelPath = post[3].Value;
                    var fileName = post[4].Value;
                    //var referenceUrl = post[3].Value;
                    $("#postType").val(type);
                    $('#RelThumbPath').val("../"+fileRelPath);
                    $('#RelFilePath').text(fileName);
                },
                complete: function ()
                {
                    $('#loadingAddPostArticlePhoto').hide();
                },
                error: function (error) {
                    alert("errror");
                }
            });
        });
    });
</script>
