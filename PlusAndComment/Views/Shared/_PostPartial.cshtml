@using PlusAndComment.Common
@model PlusAndComment.Models.MainPostVM
@{
    ViewBag.Title = "User Post";
}

<head>
    <meta property="og:image" content="@Url.Content("~/Storage/logo.png")" />
</head>

<div id="mainPostId_@(Model.ID)">
    <div class="media mainPost" style="overflow: visible !important;">
        <input id="userAuth" type="hidden" value=@(User.Identity.IsAuthenticated) />
        <div class="media-heading" style="text-align: left; margin-left: 5px; margin-top: 5px;">
            <span>@Html.DisplayFor(m => m.ShortDescription)</span>
        </div>
        <div class="media-body imgPost" style="overflow: visible !important; text-align:center; position: relative; display: block;">
            @{
                <input style="display: none" type="text" id="eurl_@(Model.ID)" value="@HttpContext.Current.Request.Url.Host/Home/SingleMainPost/@(Model.ID)" />

                var isBlured = Model.NeedAge == true ? "blur" : "";
                var coverStyle = Model.NeedAge == true ? "block" : "none";
                if (ViewBag.showNeedAgePics != null && ViewBag.showNeedAgePics)
                {
                    isBlured = "";
                    coverStyle = "none";
                }
            }
         
            <div id="coverForAge_@(Model.ID)" class="coverForAge img-responsive" style="cursor: pointer; position: absolute; z-index: 10; height: 100%; width: 100%; top: 0; left: 0; display: @(coverStyle)" onclick="UncoverAge(@(Model.ID))">
                <img src="~/Storage/osiemnascie.png" class="img-responsive center" style="width: 314px; height:200px; position: absolute; margin: 0; top: 50%; left: 50%; margin-right: -50%; transform: translate(-50%, -50%)" />
            </div>
            <div id="blurForAge_@(Model.ID)" class='@isBlured'>
                <div id="postContent_@(Model.ID)" class="postContent">
                    <i id="copyLink_@(Model.ID)" class="glyphicon glyphicon-link copyLink " onClick='CopyLinkClicked(this)' data-placement="left" data-copytarget="#eurl_@(Model.ID)" data-toggle="tooltip" title="kopiuj link"></i>
                    @{
                        if (!string.IsNullOrWhiteSpace(Model.Url) && (Model.Url.Contains("youtube") || Model.Url.Contains("facebook.com") || Model.Url.Contains("dailymotion.com") || Model.Url.Contains("vimeo.com")))
                        {
                            <div class="embed-responsive embed-responsive-4by3">
                                <iframe class="embed-responsive-item" id="movieThumb" width="470" height="365" src="@Model.EmbedUrl" frameborder="0" allowfullscreen style="max-width: 100%;"></iframe>
                            </div>
                        }
                        else if (Model.postType == Enums.PostType.gif)
                        {
                            <div>
                                @if (Request.Browser.IsMobileDevice)
                                {
                                    <img src="@Model.EmbedUrl" data-wait="true" style="width: 100%" />
                                }
                                else
                                {
                                    <img src="@Model.ReferenceUrl" class="gifplayer gifplayer_@(ViewBag.amountPart)" data-wait="true"/>
                                }
                            </div>
                        }
                        else if (!string.IsNullOrWhiteSpace(Model.Url) && (Model.Url.ToLower().EndsWith(".jpg") 
                                                                        || Model.Url.ToLower().EndsWith(".jpeg") 
                                                                        || Model.Url.ToLower().EndsWith(".png") 
                                                                        || Model.Url.ToLower().EndsWith(".bmp")))
                        {
                            <img src="@Model.Url" class="img-responsive" style="margin-left: auto; margin-right: auto;" />
                        }
                        else if (!string.IsNullOrWhiteSpace(Model.FilePath) && (Model.FilePath.ToLower().EndsWith(".jpg") 
                                                                            || Model.FilePath.ToLower().EndsWith(".jpeg") 
                                                                            || Model.FilePath.ToLower().EndsWith(".png") 
                                                                            || Model.FilePath.ToLower().EndsWith(".bmp")))
                        {
                            <img src="@Model.FilePath" data-wait="true" class="img-responsive" style="margin-left: auto; margin-right: auto;" />
                        }

                        <div style="text-align: left; color:#B0B0B0; font-size: 11px">
                            @if (!string.IsNullOrWhiteSpace(Model.Header))
                            {
                                @Html.Label("źródło: ");
                                @Html.DisplayFor(m => m.Header);
                            }
                        </div>
                        <div style="text-align: right; color:#B0B0B0; font-size: 11px">
                            @if (Model.User != null && !string.IsNullOrWhiteSpace(Model.User.UserName))
                            { @Html.DisplayFor(m => m.User.UserName);
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
        <div class="media-object" style="margin-left: 20px">
            @if (ViewContext.HttpContext.User.IsInRole("Moderator") || ViewContext.HttpContext.User.IsInRole("Admin") || (Model.User != null && Model.User.UserName == User.Identity.Name ))
            {
                @Ajax.ActionLink("Usuń Post",
                     "RemovePost",
                     new { id = Model.ID },
                     new AjaxOptions
                     {
                         UpdateTargetId = "mainPostId_" + Model.ID,
                         InsertionMode = InsertionMode.Replace,
                         HttpMethod = "GET"
                     });

                @Html.CheckBoxFor(m => m.NeedAge, new { id="checkBoxNeedAge_"+ Model.ID, onchange = "NeedAgeChange(this)", @style = "margin-left: 10px; margin-top: 5px;"  })
                @Html.Label("18+");
            }
        </div>

        @{
            string clas = string.Empty;
            if (Model.UsersVotesOnThisPost.Select(m => m.UserName).Contains(User.Identity.Name))
            {
                clas = "background-color: green !important";
            }

            <hr class="horizontalLine" />
            @Ajax.RawActionLink("<i class='glyphicon glyphicon-ok'></i> " + Html.DisplayFor(m => m.PlusAmount).ToString(),
             "AddPlusToPostAsync",
             "Home",
             new { id = Model.ID },
             new AjaxOptions
             {
                 HttpMethod = "POST",
                 OnFailure = "actionFailure",
                 OnSuccess = "actionAddPlusSuccess"
             },
             new { @style = clas, @id = "plusLabel" + Model.ID, @class = "btn-sm btn-labeled  btn-success-pc" })

            <a href="#" class="btn-sm btn-labeled btn-success-pc" id="showLeaveFirstCommentButton_@(Model.ID)" onclick="return showleaveComment(@(Model.ID),@(User.Identity.IsAuthenticated.ToString().ToLower()))">komentarz <i class='glyphicon glyphicon-chevron-down' style="padding-top: 10px"></i></a>
        }

        <div class="pull-right">
            <div class="fb-send " style="display: inline-block" data-href="/Home/SingleMainPost/@(Model.ID)"></div>
            <div class="fb-share-button" style="padding-top:5px; position: relative; display: inline-block" data-href="/Home/SingleMainPost/@(Model.ID)" data-layout="button" data-size="small" data-mobile-iframe="true"><a class="fb-xfbml-parse-ignore" target="_blank" href="/Home/SingleMainPost/@(Model.ID)">Udostępnij</a></div>
        </div>

        <div id="leaveCommentPartial_@(Model.ID)" style="display: none">
            @Html.Action("LeaveComment", new { id = Model.ID })
        </div>

        <div id="commentsMain_@(Model.ID)">
            @if (Model.Posts.Count > 0)
            {
                int i = 0;
                foreach (var item in Model.Posts)
                {
                    @Html.Partial("_ShowCommentPartial", item, new ViewDataDictionary { { "showAllPosts", "false" } })

                    i++;
                    if (i > 1) { break; }
                }
            }

            @if (Model.AmountOfAllcommens > 2)
            {
                @Ajax.RawActionLink("<div class='btn-default btn-xs btn-pokaz-wszystkie' id='buttonAllComments_" + Model.ID + "' style='text-align: center; width: calc(100% - 6px); margin-left: 3px;'> Pokaż wszystkie (" + Model.AmountOfAllcommens + ")</div><div style='width: 100%; text-align: center'><img src='..//Storage//ajax-loader.gif' id='loadingIndiComment_" + Model.ID + "' style='width: 15px; display: none'/></div>",
                               "ShowAllMainPostComments",
                               "Home",
                               new { id = Model.ID },
                               new AjaxOptions
                               {
                                   UpdateTargetId = "commentsMain_" + Model.ID,
                                   InsertionMode = InsertionMode.Replace,
                                   HttpMethod = "GET",
                                   OnBegin = "showCommentsLoader(" + Model.ID + ")"
                               },
                               new { @id = "showCommentsButton_" + Model.ID })
            }

        </div>
    </div>
</div>

